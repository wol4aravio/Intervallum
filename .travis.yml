env:
  global:
    - secure: "Uz21rM7B2gPZeE57lira+pyiQFblmD4x0GHFdnBESuzSAH5crz+6TLR/lxoa09mRx6CqqXOGIDXwbHAxg8LL3BEOm9sIL1bOXmZyTp9uiSbpCPXVBGSjOYUfRF3K3ohVys8w177uWgooQEdj0K+Z0PmzeMAuVEigSsDt1SEq0TeQXlUefv1WtqIj5LTX56QXN9h+/59UYnVmF0WXUWQ5FIMO0MsRkWP9v6BgDI5xD0HjH+50Um8w2Fn3AjWK0FbUxXpmUShZr/qeexMNk/q15jS5N6OwbTdSm9yu/8dUTxrcLM9AxQ3QZHOdjldBFsXroV62ItQzUaGTmfFZDgk67Yp//uTJ2grkIrTy2rddhrFHT34Qpsm2CppKdSO/GmXJokobE1rq0lcsT2YbHZwnSccH+MaCzMLCbY623in/6S1xk0HvMDPtVZpMYpBnV07/mf0PCWuLTkSAfN9oq0c2nz+0Lh7FuWoCsRTpC40tpBZctaLQdeNWSaM5QP5amrdLMarMR14MvteEwSfAyRw5vlYPb6bUWcyACtZFPZ5vJjMsqXeu66fQNlyzorwfNIrvYQW6ywysocBp2i5vMfmpwa4Chqfb9Ut946ZX274vIIFZKhLaLZ5WK7nJznmJWOIcwbbBAXWLc7tcN5c8hDbPq/symvoDANqMQq/2y67zkdM="
    - secure: "XeJm8GMgLuaOrLx2MzZkBUi5MwPh6Gc8PysV1DEBqtNj4mFHha4DnYy0eG/RCWnirr1l1j0qBA/NwjZYCibXHqMH02yHiJbhzlF/n/3HKG2olE8pG3zlIbuz0PRvEnH+mghI4uXGklcZapduWqjI+UgO6YK+y4YSgI7Dzd9535FPSxANFXDQq/U+nx9aNzm60MoiSFAVQj1dbG0K+G2N+iqX1uEvglWsYFSQHfUsF2WdC/WUZlemttHn+ASv9eVLZWJWpAvClc8pc8oe1N+kYA5NAoqQIcEKxzgFBUW+jcUaH7SSL5GqT0rjpWeO0GmE9yLMPVNzdI+96fhara8nFYL4zx8WPwDPsbkV+5QkxMe0HAiouR1siueoAqe55eWcxxRJ3c78m/f2nj+Wc+lYdRFifIi3FjCbPSTkqlJ9E4cxWEiR/28HILpy11QMNrH54T0fT5yNC8zYZXwmZ+G3yPx0DHBHIteYSWmzTPPubViSMtYWErotCuNXmWHZskRA/ZhzcJ/urB53URpROwcE8/PBU9JdMbWN9o+nSVl936PzDS1i1W4HW2FFEpPr/2RHYd5NhkyUtOwSCduY/omK9CA7K1E1yxdFZ7NIK9cI4UVoGdkOnXgqJxKby67XMcv6lhyaGvkbKYORZ/yikl9AzFXmY4Ul931QRzzKrQIVSzc="
    - secure: "tHTfO2BerUD9TVS049n2vN8XD3M6EuLBQBIYT9IMFwy9hmBFVXC5yF2HiZMgSo9cyAKS/qTgttyxzGuo0mT+rahvVUb5KhKG2vzylD8wfY4tnCRkDDOXCsiJ+jF67jFjbtnW5PmLFq+hQ2LY+6rgq4kw7Jma0OpTLcz0m2qncwcmQbQ1jRKBLfOs6abzeDbUP1zGL19xmIWmol7NYqU1S1fpBCBkGqrFkCZKpZRci/GDZ80ReyMz3jbpIWybFzbgZ6Xk7HjfHQwwJ0nxeI24vdbthgtphOvHnkcST5nsm/6Oixd49YkzE19pWbY+mEW5acr2G9rGHxUmS5GEjY6QZ/hflNqgJlD7PT/QAZdehEYhpmXZj73sOYP3UO9Rcge1Oyk3Guhb+hByWJ1/o/eX3mZtYf0x0WU8rhLFh4+LuR8/ie/HUCptddHzlNNIACO8119NclUtBS3kEg2icWyRfXsalnDZxxBoHa6EKp6RtoAPTDSSUqATAdGLAU02ChWvtZLa+m8R0GBakQyDHXK2Qio9I4H6KI9BNUV2+oL4IRho6IoxOxpcLTHfhIWIMIruTQJuqaToWTzz9aebN659KKCBQSm09gtnxEqrXJMexaljBNsPltf7w0g3aK61GHeyHcsa8uQyofVbMm6OxA++VwzJGXNcEr4RtCxuBGBW2rg="

language: python
python:
  - "3.6"
install:
  - pip install pipenv
  - pip install twine
  - pip install codecov
  - pipenv install
  - pipenv install --dev
before_script:
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build
script:
  - set -e
  - mypy --ignore-missing-imports .
  - pipenv run pytest -v -n 2 -s --cov=./
  - coverage xml
after_success:
  - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT
  - pipenv run pipenv_to_requirements
  - python setup.py sdist bdist_wheel
  - if [! $TRAVIS_PULL_REQUEST ] && [ "$TRAVIS_BRANCH" = "dev" ]; then twine upload -u $PYPI_USERNAME -p $PYPI_PASSWORD --repository-url https://test.pypi.org/legacy/ dist/*; fi
  - if [! $TRAVIS_PULL_REQUEST ] && [ "$TRAVIS_BRANCH" = "master" ]; then twine upload -u $PYPI_USERNAME -p $PYPI_PASSWORD dist/*; fi
